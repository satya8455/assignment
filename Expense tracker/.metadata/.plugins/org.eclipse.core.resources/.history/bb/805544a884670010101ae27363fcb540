package com.watsoo.wallet_service.controller;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.watsoo.wallet_service.dto.IncomeTransactionDto;
import com.watsoo.wallet_service.dto.Response;
import com.watsoo.wallet_service.service.IncomeTransactionService;
import com.watsoo.wallet_service.service.ValidationService;

@RestController
public class IncomeTransactionController {

	@Autowired
	private IncomeTransactionService incomeTransactionService ;
	
	@Autowired
	private ValidationService validationService ;
	
	@PostMapping("create/transaction")
	public ResponseEntity<?> createWalletType(@RequestBody IncomeTransactionDto incomeTransactionDto) {
			Response<?> validateResponse = validationService.checkForIncomePayload(incomeTransactionDto);
			if(validateResponse.getResponseCode()==HttpStatus.OK.value()) {
				Response<?> response = incomeTransactionService.createTransaction(incomeTransactionDto);
				return new ResponseEntity<>(response, HttpStatus.valueOf(response.getResponseCode()));				
			}
			return new ResponseEntity<>(validateResponse, HttpStatus.valueOf(validateResponse.getResponseCode()));				
	}
	
	@GetMapping("get/all/income-transactions")
	public ResponseEntity<?> getAllUsers(@RequestParam Long userId,
	        @RequestParam(required = false) Long walletId,
	        @RequestParam(required = false) String startDate,
	        @RequestParam(required = false) String endDate) {
		Response<?> response = incomeTransactionService.getAllTransactions(userId,walletId,startDate,endDate);
		return new ResponseEntity<>(response, HttpStatus.valueOf(response.getResponseCode()));
	}
}
